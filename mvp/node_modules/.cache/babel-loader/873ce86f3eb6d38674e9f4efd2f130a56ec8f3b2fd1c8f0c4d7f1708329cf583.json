{"ast":null,"code":"import { isNodeType } from \"../../predicates.mjs\";\n/**\n * @public\n */\nexport const isDocument = node => isNodeType('document', node);\n\n/**\n * @public\n */\nexport const isString = node => isNodeType('string', node);\n\n/**\n * @public\n */\nexport const isFalse = node => isNodeType('false', node);\n\n/**\n * @public\n */\nexport const isTrue = node => isNodeType('true', node);\n\n/**\n * @public\n */\nexport const isNull = node => isNodeType('null', node);\n\n/**\n * @public\n */\nexport const isNumber = node => isNodeType('number', node);\n\n/**\n * @public\n */\nexport const isArray = node => isNodeType('array', node);\n\n/**\n * @public\n */\nexport const isObject = node => isNodeType('object', node);\n\n/**\n * @public\n */\nexport const isStringContent = node => isNodeType('stringContent', node);\n\n/**\n * @public\n */\nexport const isEscapeSequence = node => isNodeType('escapeSequence', node);\n\n/**\n * @public\n */\nexport const isProperty = node => isNodeType('property', node);\n\n/**\n * @public\n */\nexport const isKey = node => isNodeType('key', node);","map":{"version":3,"names":["isNodeType","isDocument","node","isString","isFalse","isTrue","isNull","isNumber","isArray","isObject","isStringContent","isEscapeSequence","isProperty","isKey"],"sources":["D:/Vasya/Documents/STUDYING/NSU/4_year/ТехДок/Проект/anakot/node_modules/@swagger-api/apidom-ast/src/json/nodes/predicates.mjs"],"sourcesContent":["import { isNodeType } from \"../../predicates.mjs\";\n/**\n * @public\n */\nexport const isDocument = node => isNodeType('document', node);\n\n/**\n * @public\n */\nexport const isString = node => isNodeType('string', node);\n\n/**\n * @public\n */\nexport const isFalse = node => isNodeType('false', node);\n\n/**\n * @public\n */\nexport const isTrue = node => isNodeType('true', node);\n\n/**\n * @public\n */\nexport const isNull = node => isNodeType('null', node);\n\n/**\n * @public\n */\nexport const isNumber = node => isNodeType('number', node);\n\n/**\n * @public\n */\nexport const isArray = node => isNodeType('array', node);\n\n/**\n * @public\n */\nexport const isObject = node => isNodeType('object', node);\n\n/**\n * @public\n */\nexport const isStringContent = node => isNodeType('stringContent', node);\n\n/**\n * @public\n */\nexport const isEscapeSequence = node => isNodeType('escapeSequence', node);\n\n/**\n * @public\n */\nexport const isProperty = node => isNodeType('property', node);\n\n/**\n * @public\n */\nexport const isKey = node => isNodeType('key', node);"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAIF,UAAU,CAAC,UAAU,EAAEE,IAAI,CAAC;;AAE9D;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGD,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAME,OAAO,GAAGF,IAAI,IAAIF,UAAU,CAAC,OAAO,EAAEE,IAAI,CAAC;;AAExD;AACA;AACA;AACA,OAAO,MAAMG,MAAM,GAAGH,IAAI,IAAIF,UAAU,CAAC,MAAM,EAAEE,IAAI,CAAC;;AAEtD;AACA;AACA;AACA,OAAO,MAAMI,MAAM,GAAGJ,IAAI,IAAIF,UAAU,CAAC,MAAM,EAAEE,IAAI,CAAC;;AAEtD;AACA;AACA;AACA,OAAO,MAAMK,QAAQ,GAAGL,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAMM,OAAO,GAAGN,IAAI,IAAIF,UAAU,CAAC,OAAO,EAAEE,IAAI,CAAC;;AAExD;AACA;AACA;AACA,OAAO,MAAMO,QAAQ,GAAGP,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAMQ,eAAe,GAAGR,IAAI,IAAIF,UAAU,CAAC,eAAe,EAAEE,IAAI,CAAC;;AAExE;AACA;AACA;AACA,OAAO,MAAMS,gBAAgB,GAAGT,IAAI,IAAIF,UAAU,CAAC,gBAAgB,EAAEE,IAAI,CAAC;;AAE1E;AACA;AACA;AACA,OAAO,MAAMU,UAAU,GAAGV,IAAI,IAAIF,UAAU,CAAC,UAAU,EAAEE,IAAI,CAAC;;AAE9D;AACA;AACA;AACA,OAAO,MAAMW,KAAK,GAAGX,IAAI,IAAIF,UAAU,CAAC,KAAK,EAAEE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}