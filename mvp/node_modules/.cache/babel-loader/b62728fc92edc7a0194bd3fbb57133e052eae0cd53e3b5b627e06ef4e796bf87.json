{"ast":null,"code":"import { isNodeType } from \"../../predicates.mjs\";\n/**\n * @public\n */\nexport const isStream = node => isNodeType('stream', node);\n\n/**\n * @public\n */\nexport const isDocument = node => isNodeType('document', node);\n\n/**\n * @public\n */\nexport const isMapping = node => isNodeType('mapping', node);\n\n/**\n * @public\n */\nexport const isSequence = node => isNodeType('sequence', node);\n\n/**\n * @public\n */\nexport const isKeyValuePair = node => isNodeType('keyValuePair', node);\n\n/**\n * @public\n */\nexport const isTag = node => isNodeType('tag', node);\n\n/**\n * @public\n */\nexport const isAnchor = node => isNodeType('anchor', node);\n\n/**\n * @public\n */\nexport const isScalar = node => isNodeType('scalar', node);\n\n/**\n * @public\n */\nexport const isAlias = node => isNodeType('alias', node);\n\n/**\n * @public\n */\nexport const isDirective = node => isNodeType('directive', node);\n\n/**\n * @public\n */\nexport const isComment = node => isNodeType('comment', node);","map":{"version":3,"names":["isNodeType","isStream","node","isDocument","isMapping","isSequence","isKeyValuePair","isTag","isAnchor","isScalar","isAlias","isDirective","isComment"],"sources":["D:/Vasya/Documents/STUDYING/NSU/4_year/ТехДок/Проект/anakot/node_modules/@swagger-api/apidom-ast/src/yaml/nodes/predicates.mjs"],"sourcesContent":["import { isNodeType } from \"../../predicates.mjs\";\n/**\n * @public\n */\nexport const isStream = node => isNodeType('stream', node);\n\n/**\n * @public\n */\nexport const isDocument = node => isNodeType('document', node);\n\n/**\n * @public\n */\nexport const isMapping = node => isNodeType('mapping', node);\n\n/**\n * @public\n */\nexport const isSequence = node => isNodeType('sequence', node);\n\n/**\n * @public\n */\nexport const isKeyValuePair = node => isNodeType('keyValuePair', node);\n\n/**\n * @public\n */\nexport const isTag = node => isNodeType('tag', node);\n\n/**\n * @public\n */\nexport const isAnchor = node => isNodeType('anchor', node);\n\n/**\n * @public\n */\nexport const isScalar = node => isNodeType('scalar', node);\n\n/**\n * @public\n */\nexport const isAlias = node => isNodeType('alias', node);\n\n/**\n * @public\n */\nexport const isDirective = node => isNodeType('directive', node);\n\n/**\n * @public\n */\nexport const isComment = node => isNodeType('comment', node);"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGC,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGD,IAAI,IAAIF,UAAU,CAAC,UAAU,EAAEE,IAAI,CAAC;;AAE9D;AACA;AACA;AACA,OAAO,MAAME,SAAS,GAAGF,IAAI,IAAIF,UAAU,CAAC,SAAS,EAAEE,IAAI,CAAC;;AAE5D;AACA;AACA;AACA,OAAO,MAAMG,UAAU,GAAGH,IAAI,IAAIF,UAAU,CAAC,UAAU,EAAEE,IAAI,CAAC;;AAE9D;AACA;AACA;AACA,OAAO,MAAMI,cAAc,GAAGJ,IAAI,IAAIF,UAAU,CAAC,cAAc,EAAEE,IAAI,CAAC;;AAEtE;AACA;AACA;AACA,OAAO,MAAMK,KAAK,GAAGL,IAAI,IAAIF,UAAU,CAAC,KAAK,EAAEE,IAAI,CAAC;;AAEpD;AACA;AACA;AACA,OAAO,MAAMM,QAAQ,GAAGN,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAMO,QAAQ,GAAGP,IAAI,IAAIF,UAAU,CAAC,QAAQ,EAAEE,IAAI,CAAC;;AAE1D;AACA;AACA;AACA,OAAO,MAAMQ,OAAO,GAAGR,IAAI,IAAIF,UAAU,CAAC,OAAO,EAAEE,IAAI,CAAC;;AAExD;AACA;AACA;AACA,OAAO,MAAMS,WAAW,GAAGT,IAAI,IAAIF,UAAU,CAAC,WAAW,EAAEE,IAAI,CAAC;;AAEhE;AACA;AACA;AACA,OAAO,MAAMU,SAAS,GAAGV,IAAI,IAAIF,UAAU,CAAC,SAAS,EAAEE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}