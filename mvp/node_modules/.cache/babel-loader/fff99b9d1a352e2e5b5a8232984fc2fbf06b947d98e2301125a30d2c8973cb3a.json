{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OTD\\\\mvp\\\\src\\\\components\\\\EventTable.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/events');\n        const events = response.data;\n\n        // Группировка событий по уникальному имени\n        const groupedData = events.reduce((acc, event) => {\n          const {\n            name,\n            event_type_id,\n            created_at\n          } = event;\n          if (!acc[name]) {\n            acc[name] = {\n              name,\n              events: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0\n              },\n              // Инициализация всех типов событий\n              totalTime: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0\n              }\n            };\n          }\n\n          // Увеличиваем счетчик событий и общее время\n          acc[name].events[event_type_id] += 1;\n          acc[name].totalTime[event_type_id] += new Date(created_at).getTime();\n          return acc;\n        }, {});\n\n        // Преобразуем результат в массив\n        const processedData = Object.values(groupedData).map(group => {\n          // Вычисляем общее время в секундах для каждого типа событий\n          Object.keys(group.totalTime).forEach(eventTypeId => {\n            const totalMilliseconds = group.totalTime[eventTypeId];\n            const count = group.events[eventTypeId];\n            if (count > 0) {\n              group.totalTime[eventTypeId] = Math.round(totalMilliseconds / (count * 1000));\n            } else {\n              group.totalTime[eventTypeId] = 0;\n            }\n          });\n          return group;\n        });\n        setData(processedData);\n      } catch (error) {\n        console.error(\"Ошибка при получении событий:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u043F\\u043E \\u043F\\u0438\\u0442\\u043E\\u043C\\u0446\\u0430\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), data.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043F \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F (\\u0441\\u0435\\u043A)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(group.events).map(eventTypeId => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: eventTypeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group.events[eventTypeId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group.totalTime[eventTypeId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, eventTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(EventsPage, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","EventsPage","_s","data","setData","fetchEvents","response","get","events","groupedData","reduce","acc","event","name","event_type_id","created_at","totalTime","Date","getTime","processedData","Object","values","map","group","keys","forEach","eventTypeId","totalMilliseconds","count","Math","round","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/User/OTD/mvp/src/components/EventTable.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst EventsPage = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/events');\n                const events = response.data;\n\n                // Группировка событий по уникальному имени\n                const groupedData = events.reduce((acc, event) => {\n                    const { name, event_type_id, created_at } = event;\n\n                    if (!acc[name]) {\n                        acc[name] = {\n                            name,\n                            events: { 1: 0, 2: 0, 3: 0, 4: 0 }, // Инициализация всех типов событий\n                            totalTime: { 1: 0, 2: 0, 3: 0, 4: 0 },\n                        };\n                    }\n\n                    // Увеличиваем счетчик событий и общее время\n                    acc[name].events[event_type_id] += 1;\n                    acc[name].totalTime[event_type_id] += new Date(created_at).getTime();\n                    return acc;\n                }, {});\n\n                // Преобразуем результат в массив\n                const processedData = Object.values(groupedData).map((group) => {\n                    // Вычисляем общее время в секундах для каждого типа событий\n                    Object.keys(group.totalTime).forEach((eventTypeId) => {\n                        const totalMilliseconds = group.totalTime[eventTypeId];\n                        const count = group.events[eventTypeId];\n\n                        if (count > 0) {\n                            group.totalTime[eventTypeId] = Math.round(totalMilliseconds / (count * 1000));\n                        } else {\n                            group.totalTime[eventTypeId] = 0;\n                        }\n                    });\n                    return group;\n                });\n\n                setData(processedData);\n            } catch (error) {\n                console.error(\"Ошибка при получении событий:\", error);\n            }\n        };\n        fetchEvents();\n    }, []);\n\n    return (\n        <div>\n            <h1>События по питомцам</h1>\n            {data.map((group, index) => (\n                <div key={index}>\n                    <h2>{group.name}</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Тип события</th>\n                                <th>Количество</th>\n                                <th>Среднее время (сек)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.keys(group.events).map((eventTypeId) => (\n                                <tr key={eventTypeId}>\n                                    <td>{eventTypeId}</td>\n                                    <td>{group.events[eventTypeId]}</td>\n                                    <td>{group.totalTime[eventTypeId]}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default EventsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}