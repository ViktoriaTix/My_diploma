{"ast":null,"code":"import { pathOr } from 'ramda';\nimport { PredicateVisitor, BREAK, visit } from \"./visitor.mjs\";\n/**\n * Find first element that satisfies the provided predicate.\n * @public\n */\nconst find = (predicate, element) => {\n  const visitor = new PredicateVisitor({\n    predicate,\n    returnOnTrue: BREAK\n  });\n  visit(element, visitor);\n  return pathOr(undefined, [0], visitor.result);\n};\nexport default find;","map":{"version":3,"names":["pathOr","PredicateVisitor","BREAK","visit","find","predicate","element","visitor","returnOnTrue","undefined","result"],"sources":["D:/Vasya/Documents/STUDYING/NSU/4_year/ТехДок/Проект/anakot/node_modules/@swagger-api/apidom-core/src/traversal/find.mjs"],"sourcesContent":["import { pathOr } from 'ramda';\nimport { PredicateVisitor, BREAK, visit } from \"./visitor.mjs\";\n/**\n * Find first element that satisfies the provided predicate.\n * @public\n */\nconst find = (predicate, element) => {\n  const visitor = new PredicateVisitor({\n    predicate,\n    returnOnTrue: BREAK\n  });\n  visit(element, visitor);\n  return pathOr(undefined, [0], visitor.result);\n};\nexport default find;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,gBAAgB,EAAEC,KAAK,EAAEC,KAAK,QAAQ,eAAe;AAC9D;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACnC,MAAMC,OAAO,GAAG,IAAIN,gBAAgB,CAAC;IACnCI,SAAS;IACTG,YAAY,EAAEN;EAChB,CAAC,CAAC;EACFC,KAAK,CAACG,OAAO,EAAEC,OAAO,CAAC;EACvB,OAAOP,MAAM,CAACS,SAAS,EAAE,CAAC,CAAC,CAAC,EAAEF,OAAO,CAACG,MAAM,CAAC;AAC/C,CAAC;AACD,eAAeN,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}