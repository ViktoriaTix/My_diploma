{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vasya\\\\Documents\\\\STUDYING\\\\NSU\\\\4_year\\\\\\u0422\\u0435\\u0445\\u0414\\u043E\\u043A\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\\\anakot\\\\src\\\\components\\\\Detection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n/*import Slider from './Slider';*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detection = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [invertedImage, setInvertedImage] = useState(null);\n  const handleImageChange = event => {\n    setSelectedImage(event.target.files[0]);\n  };\n  const handleImageUpload = async () => {\n    if (!selectedImage) return;\n    const formData = new FormData();\n    formData.append('file', selectedImage);\n    try {\n      const response = await fetch('http://localhost:8000/invert-image', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при загрузке изображения');\n      }\n      const blob = await response.blob();\n      const imageUrl = URL.createObjectURL(blob);\n      setInvertedImage(imageUrl);\n    } catch (error) {\n      console.error('Ошибка при загрузке изображения:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u0438\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      children: \"\\u0418\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), invertedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u0418\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: invertedImage,\n        alt: \"Inverted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Detection, \"k5Kq/vukORM7ANc4I/ho0ZAMxO8=\");\n_c = Detection;\nexport default Detection;\nvar _c;\n$RefreshReg$(_c, \"Detection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Detection","_s","selectedImage","setSelectedImage","invertedImage","setInvertedImage","handleImageChange","event","target","files","handleImageUpload","formData","FormData","append","response","fetch","method","body","ok","Error","blob","imageUrl","URL","createObjectURL","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Vasya/Documents/STUDYING/NSU/4_year/ТехДок/Проект/anakot/src/components/Detection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n/*import Slider from './Slider';*/\r\n\r\nconst Detection = () => {\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [invertedImage, setInvertedImage] = useState(null);\r\n\r\n    const handleImageChange = (event) => {\r\n        setSelectedImage(event.target.files[0]);\r\n    };\r\n\r\n    const handleImageUpload = async () => {\r\n        if (!selectedImage) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', selectedImage);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/invert-image', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка при загрузке изображения');\r\n            }\r\n\r\n            const blob = await response.blob();\r\n            const imageUrl = URL.createObjectURL(blob);\r\n            setInvertedImage(imageUrl);\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке изображения:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Загрузить изображение для инвертирования</h3>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n            <button onClick={handleImageUpload}>Инвертировать изображение</button>\r\n            {invertedImage && (\r\n                <div>\r\n                    <h4>Инвертированное изображение:</h4>\r\n                    <img src={invertedImage} alt=\"Inverted\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACR,aAAa,EAAE;IAEpB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,aAAa,CAAC;IAEtC,IAAI;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;MAC1Cf,gBAAgB,CAACgB,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE3B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE/B,OAAA;MAAQmC,OAAO,EAAExB,iBAAkB;MAAAgB,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrE1B,aAAa,iBACVL,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC/B,OAAA;QAAKoC,GAAG,EAAE/B,aAAc;QAACgC,GAAG,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA7CID,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}