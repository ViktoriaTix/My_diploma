{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OTD\\\\mvp\\\\src\\\\components\\\\EventTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/events');\n        const events = response.data;\n        console.log(\"Сырые данные с API:\", events);\n\n        // Группировка данных по уникальному имени\n        const groupedData = events.reduce((acc, event) => {\n          const {\n            name,\n            event_type_id\n          } = event;\n          if (!acc[name]) {\n            acc[name] = {\n              name,\n              events: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0\n              }\n            }; // Инициализируем события\n          }\n\n          // Считаем количество событий каждого типа\n          if (event_type_id in acc[name].events) {\n            acc[name].events[event_type_id] += 1; // Суммируем по типу\n          }\n          return acc;\n        }, {});\n        console.log(\"Группировка данных по именам:\", groupedData);\n\n        // Преобразуем данные в массив для рендера\n        const processedData = Object.values(groupedData).map(group => {\n          const eventDurations = {};\n          Object.keys(group.events).forEach(eventTypeId => {\n            const totalHours = group.events[eventTypeId]; // Суммируем в часы\n            eventDurations[eventTypeId] = totalHours.toFixed(2); // Округляем\n          });\n          return {\n            ...group,\n            events: eventDurations\n          };\n        });\n        console.log(\"Обработанные данные для рендера:\", processedData);\n        setData(processedData);\n      } catch (error) {\n        console.error(\"Ошибка при получении данных:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  console.log(\"Данные для отображения:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u043F\\u043E \\u043F\\u0438\\u0442\\u043E\\u043C\\u0446\\u0430\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), data.length > 0 ? data.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '20px'\n        },\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '80%',\n          textAlign: 'left',\n          borderCollapse: 'collapse',\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043F \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 (\\u0447\\u0430\\u0441\\u044B)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(group.events).map(([eventTypeId, totalHours]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: eventTypeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: totalHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 41\n            }, this)]\n          }, eventTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(EventsPage, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","EventsPage","_s","data","setData","fetchEvents","response","get","events","console","log","groupedData","reduce","acc","event","name","event_type_id","processedData","Object","values","map","group","eventDurations","keys","forEach","eventTypeId","totalHours","toFixed","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","style","marginBottom","display","marginRight","border","width","textAlign","borderCollapse","entries","_c","$RefreshReg$"],"sources":["C:/Users/User/OTD/mvp/src/components/EventTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst EventsPage = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/events');\n                const events = response.data;\n\n                console.log(\"Сырые данные с API:\", events);\n\n                // Группировка данных по уникальному имени\n                const groupedData = events.reduce((acc, event) => {\n                    const { name, event_type_id } = event;\n\n                    if (!acc[name]) {\n                        acc[name] = { name, events: { 1: 0, 2: 0, 3: 0, 4: 0 } }; // Инициализируем события\n                    }\n\n                    // Считаем количество событий каждого типа\n                    if (event_type_id in acc[name].events) {\n                        acc[name].events[event_type_id] += 1; // Суммируем по типу\n                    }\n\n                    return acc;\n                }, {});\n\n                console.log(\"Группировка данных по именам:\", groupedData);\n\n                // Преобразуем данные в массив для рендера\n                const processedData = Object.values(groupedData).map((group) => {\n                    const eventDurations = {};\n                    Object.keys(group.events).forEach((eventTypeId) => {\n                        const totalHours = group.events[eventTypeId]; // Суммируем в часы\n                        eventDurations[eventTypeId] = totalHours.toFixed(2); // Округляем\n                    });\n                    return { ...group, events: eventDurations };\n                });\n\n                console.log(\"Обработанные данные для рендера:\", processedData);\n\n                setData(processedData);\n            } catch (error) {\n                console.error(\"Ошибка при получении данных:\", error);\n            }\n        };\n\n        fetchEvents();\n    }, []);\n\n    console.log(\"Данные для отображения:\", data);\n\n    return (\n        <div>\n            <h1>События по питомцам</h1>\n            {data.length > 0 ? (\n                data.map((group, index) => (\n                    <div key={index} style={{ marginBottom: '2rem' }}>\n                        {/* Выводим имя питомца рядом с таблицей */}\n                        <h2 style={{ display: 'inline-block', marginRight: '20px' }}>{group.name}</h2>\n\n                        {/* Таблица событий */}\n                        <table border=\"1\" style={{ width: '80%', textAlign: 'left', borderCollapse: 'collapse', display: 'inline-block' }}>\n                            <thead>\n                                <tr>\n                                    <th>Тип события</th>\n                                    <th>Сумма времени (часы)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {Object.entries(group.events).map(([eventTypeId, totalHours]) => (\n                                    <tr key={eventTypeId}>\n                                        <td>{eventTypeId}</td>\n                                        <td>{totalHours}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                ))\n            ) : (\n                <p>Данные отсутствуют</p>\n            )}\n        </div>\n    );\n};\n\nexport default EventsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}