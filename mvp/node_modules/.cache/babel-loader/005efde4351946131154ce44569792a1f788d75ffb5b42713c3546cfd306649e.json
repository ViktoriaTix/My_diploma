{"ast":null,"code":"const renderChart = (data, canvasRef, chartHeight, barWidth) => {\n  const canvas = canvasRef.current;\n  const ctx = canvas.getContext(\"2d\");\n  if (data.length === 0) return;\n  const maxWidth = 1000;\n  const canvasWidth = Math.min(data.length * barWidth, maxWidth);\n  canvas.width = canvasWidth;\n  canvas.height = chartHeight + 100;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  const colors = {\n    1: \"#B39DDB\",\n    // Сиреневый для активных действий\n    2: \"#FFD54F\",\n    // Желтый для спокойствия\n    3: \"#64B5F6\",\n    // Синий для туалета\n    0: \"#FF8A65\" // Розовый для еды\n  };\n  data.forEach((event, index) => {\n    const x = index * (barWidth + 10); // Увеличиваем расстояние между барами\n    const color = colors[event.event_type_id] || \"#F7A8B8\";\n\n    // Градиент для баров\n    const gradient = ctx.createLinearGradient(x, 0, x + barWidth, chartHeight);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, \"#ffffff\");\n\n    // Закругленные бары\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.moveTo(x, chartHeight);\n    ctx.lineTo(x, 10);\n    ctx.arcTo(x, 0, x + barWidth, 0, 5); // Радиус скругления 5px\n    ctx.arcTo(x + barWidth, 0, x + barWidth, chartHeight, 5);\n    ctx.lineTo(x + barWidth, chartHeight);\n    ctx.closePath();\n    ctx.fill();\n\n    // Отрисовка границ баров\n    ctx.strokeStyle = \"#333\";\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Время под графиком\n    if (index % 5 === 0) {\n      ctx.fillStyle = \"#555\";\n      ctx.font = \"12px Arial\";\n      ctx.textAlign = \"center\";\n      const time = new Date(event.created_at).toLocaleTimeString();\n      ctx.fillText(time, x + barWidth / 2, chartHeight + 30);\n    }\n  });\n\n  // Отметка осей\n  ctx.strokeStyle = \"#333\";\n  ctx.lineWidth = 1;\n  ctx.beginPath();\n  ctx.moveTo(0, chartHeight);\n  ctx.lineTo(canvas.width, chartHeight);\n  ctx.stroke();\n\n  // Легенда\n  const legend = [{\n    color: \"#B39DDB\",\n    text: \"Активные действия\"\n  }, {\n    color: \"#FFD54F\",\n    text: \"Спокойствие\"\n  }, {\n    color: \"#64B5F6\",\n    text: \"Туалет\"\n  }, {\n    color: \"#FF8A65\",\n    text: \"Еда\"\n  }];\n  legend.forEach((item, index) => {\n    const x = 20;\n    const y = chartHeight + 50 + index * 20;\n    ctx.fillStyle = item.color;\n    ctx.fillRect(x, y, 15, 15);\n    ctx.fillStyle = \"#333\";\n    ctx.font = \"12px Arial\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(item.text, x + 20, y + 12);\n  });\n};","map":{"version":3,"names":["renderChart","data","canvasRef","chartHeight","barWidth","canvas","current","ctx","getContext","length","maxWidth","canvasWidth","Math","min","width","height","clearRect","colors","forEach","event","index","x","color","event_type_id","gradient","createLinearGradient","addColorStop","fillStyle","beginPath","moveTo","lineTo","arcTo","closePath","fill","strokeStyle","lineWidth","stroke","font","textAlign","time","Date","created_at","toLocaleTimeString","fillText","legend","text","item","y","fillRect"],"sources":["C:/Users/User/OTD/mvp/src/components/Graf.js"],"sourcesContent":["const renderChart = (data, canvasRef, chartHeight, barWidth) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    if (data.length === 0) return;\r\n\r\n    const maxWidth = 1000;\r\n    const canvasWidth = Math.min(data.length * barWidth, maxWidth);\r\n    canvas.width = canvasWidth;\r\n    canvas.height = chartHeight + 100;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const colors = {\r\n        1: \"#B39DDB\", // Сиреневый для активных действий\r\n        2: \"#FFD54F\", // Желтый для спокойствия\r\n        3: \"#64B5F6\", // Синий для туалета\r\n        0: \"#FF8A65\", // Розовый для еды\r\n    };\r\n\r\n    data.forEach((event, index) => {\r\n        const x = index * (barWidth + 10); // Увеличиваем расстояние между барами\r\n        const color = colors[event.event_type_id] || \"#F7A8B8\";\r\n\r\n        // Градиент для баров\r\n        const gradient = ctx.createLinearGradient(x, 0, x + barWidth, chartHeight);\r\n        gradient.addColorStop(0, color);\r\n        gradient.addColorStop(1, \"#ffffff\");\r\n\r\n        // Закругленные бары\r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, chartHeight);\r\n        ctx.lineTo(x, 10);\r\n        ctx.arcTo(x, 0, x + barWidth, 0, 5); // Радиус скругления 5px\r\n        ctx.arcTo(x + barWidth, 0, x + barWidth, chartHeight, 5);\r\n        ctx.lineTo(x + barWidth, chartHeight);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        // Отрисовка границ баров\r\n        ctx.strokeStyle = \"#333\";\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n\r\n        // Время под графиком\r\n        if (index % 5 === 0) {\r\n            ctx.fillStyle = \"#555\";\r\n            ctx.font = \"12px Arial\";\r\n            ctx.textAlign = \"center\";\r\n            const time = new Date(event.created_at).toLocaleTimeString();\r\n            ctx.fillText(time, x + barWidth / 2, chartHeight + 30);\r\n        }\r\n    });\r\n\r\n    // Отметка осей\r\n    ctx.strokeStyle = \"#333\";\r\n    ctx.lineWidth = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, chartHeight);\r\n    ctx.lineTo(canvas.width, chartHeight);\r\n    ctx.stroke();\r\n\r\n    // Легенда\r\n    const legend = [\r\n        { color: \"#B39DDB\", text: \"Активные действия\" },\r\n        { color: \"#FFD54F\", text: \"Спокойствие\" },\r\n        { color: \"#64B5F6\", text: \"Туалет\" },\r\n        { color: \"#FF8A65\", text: \"Еда\" },\r\n    ];\r\n\r\n    legend.forEach((item, index) => {\r\n        const x = 20;\r\n        const y = chartHeight + 50 + index * 20;\r\n\r\n        ctx.fillStyle = item.color;\r\n        ctx.fillRect(x, y, 15, 15);\r\n\r\n        ctx.fillStyle = \"#333\";\r\n        ctx.font = \"12px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.fillText(item.text, x + 20, y + 12);\r\n    });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}