{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OTD\\\\mvp\\\\src\\\\components\\\\Graf.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\"; // Импортируем компонент для линейного графика\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Регистрируем необходимые элементы для Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst EventsChart = () => {\n  _s();\n  const [homeId, setHomeId] = useState(null);\n  const [data, setData] = useState([]);\n\n  // Функция для получения событий из API\n  const fetchData = async homeId => {\n    try {\n      const url = homeId ? `http://localhost:8000/events?id_home=${homeId}` : \"http://localhost:8000/events\";\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Ошибка HTTP: ${response.status}`);\n      }\n      const events = await response.json();\n      setData(events);\n    } catch (error) {\n      console.error(\"Ошибка при загрузке данных:\", error);\n    }\n  };\n\n  // Хук для загрузки данных при изменении homeId\n  useEffect(() => {\n    if (homeId) {\n      fetchData(homeId);\n    }\n  }, [homeId]);\n\n  // Преобразуем данные в формат, подходящий для Chart.js\n  const prepareChartData = data => {\n    const labels = data.map(event => new Date(event.created_at).toLocaleTimeString()); // Время событий\n    const eventTypes = {\n      1: \"Active\",\n      2: \"Calm\",\n      3: \"Toilet\",\n      4: \"Eat\"\n    };\n    const datasets = Object.keys(eventTypes).map(eventTypeId => {\n      const filteredData = data.filter(event => event.event_type_id === parseInt(eventTypeId));\n      const values = labels.map(label => {\n        const event = filteredData.find(event => new Date(event.created_at).toLocaleTimeString() === label);\n        return event ? 1 : 0; // Отображаем 1, если событие произошло, иначе 0\n      });\n      return {\n        label: eventTypes[eventTypeId],\n        data: values,\n        borderColor: eventTypeId === \"1\" ? \"#D9A6F5\" : eventTypeId === \"2\" ? \"#FFFB7E\" : eventTypeId === \"3\" ? \"#4A90E2\" : \"#F7A8B8\",\n        fill: false,\n        // Линия без заливки\n        tension: 0.1 // Для сглаживания линии\n      };\n    });\n    return {\n      labels,\n      datasets\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#f4f4f4\",\n      padding: \"20px\",\n      borderRadius: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHomeId(101),\n        children: \"BedRoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHomeId(102),\n        children: \"Kitchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), homeId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\u041B\\u0438\\u043D\\u0435\\u0439\\u043D\\u044B\\u0439 \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n        data: prepareChartData(data) // Передаем подготовленные данные\n        ,\n        options: {\n          responsive: true,\n          plugins: {\n            title: {\n              display: true,\n              text: \"График событий питомцев\"\n            },\n            tooltip: {\n              callbacks: {\n                label: context => `${context.dataset.label}: ${context.raw}` // Форматируем подсказки\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: \"Время\"\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"Событие\"\n              },\n              ticks: {\n                stepSize: 1,\n                min: 0,\n                max: 1\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(EventsChart, \"M10B91Kwtn3jtk5LxwSWHs7KLUw=\");\n_c = EventsChart;\nexport default EventsChart;\nvar _c;\n$RefreshReg$(_c, \"EventsChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","EventsChart","_s","homeId","setHomeId","data","setData","fetchData","url","response","fetch","ok","Error","status","events","json","error","console","prepareChartData","labels","map","event","Date","created_at","toLocaleTimeString","eventTypes","datasets","Object","keys","eventTypeId","filteredData","filter","event_type_id","parseInt","values","label","find","borderColor","fill","tension","style","backgroundColor","padding","borderRadius","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","overflowX","marginTop","length","options","responsive","plugins","title","display","text","tooltip","callbacks","context","dataset","raw","scales","x","y","ticks","stepSize","min","max","_c","$RefreshReg$"],"sources":["C:/Users/User/OTD/mvp/src/components/Graf.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\"; // Импортируем компонент для линейного графика\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\n\r\n// Регистрируем необходимые элементы для Chart.js\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst EventsChart = () => {\r\n    const [homeId, setHomeId] = useState(null);\r\n    const [data, setData] = useState([]);\r\n\r\n    // Функция для получения событий из API\r\n    const fetchData = async (homeId) => {\r\n        try {\r\n            const url = homeId ? `http://localhost:8000/events?id_home=${homeId}` : \"http://localhost:8000/events\";\r\n            const response = await fetch(url);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Ошибка HTTP: ${response.status}`);\r\n            }\r\n\r\n            const events = await response.json();\r\n            setData(events);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при загрузке данных:\", error);\r\n        }\r\n    };\r\n\r\n    // Хук для загрузки данных при изменении homeId\r\n    useEffect(() => {\r\n        if (homeId) {\r\n            fetchData(homeId);\r\n        }\r\n    }, [homeId]);\r\n\r\n    // Преобразуем данные в формат, подходящий для Chart.js\r\n    const prepareChartData = (data) => {\r\n        const labels = data.map((event) => new Date(event.created_at).toLocaleTimeString()); // Время событий\r\n        const eventTypes = {\r\n            1: \"Active\",\r\n            2: \"Calm\",\r\n            3: \"Toilet\",\r\n            4: \"Eat\",\r\n        };\r\n\r\n        const datasets = Object.keys(eventTypes).map((eventTypeId) => {\r\n            const filteredData = data.filter((event) => event.event_type_id === parseInt(eventTypeId));\r\n            const values = labels.map((label) => {\r\n                const event = filteredData.find((event) => new Date(event.created_at).toLocaleTimeString() === label);\r\n                return event ? 1 : 0; // Отображаем 1, если событие произошло, иначе 0\r\n            });\r\n\r\n            return {\r\n                label: eventTypes[eventTypeId],\r\n                data: values,\r\n                borderColor: eventTypeId === \"1\" ? \"#D9A6F5\" : eventTypeId === \"2\" ? \"#FFFB7E\" : eventTypeId === \"3\" ? \"#4A90E2\" : \"#F7A8B8\",\r\n                fill: false, // Линия без заливки\r\n                tension: 0.1, // Для сглаживания линии\r\n            };\r\n        });\r\n\r\n        return {\r\n            labels,\r\n            datasets,\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"#f4f4f4\", padding: \"20px\", borderRadius: \"10px\" }}>\r\n            <h2 style={{ textAlign: \"center\" }}>Выберите комнату для отображения графика</h2>\r\n\r\n            <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n                <button onClick={() => setHomeId(101)}>BedRoom</button>\r\n                <button onClick={() => setHomeId(102)}>Kitchen</button>\r\n            </div>\r\n\r\n            {homeId && (\r\n                <div style={{ overflowX: \"auto\", marginTop: \"30px\" }}>\r\n                    <h3 style={{ textAlign: \"center\" }}>Линейный график событий</h3>\r\n                    {data.length > 0 && (\r\n                        <Line\r\n                            data={prepareChartData(data)} // Передаем подготовленные данные\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: \"График событий питомцев\",\r\n                                    },\r\n                                    tooltip: {\r\n                                        callbacks: {\r\n                                            label: (context) => `${context.dataset.label}: ${context.raw}`, // Форматируем подсказки\r\n                                        },\r\n                                    },\r\n                                },\r\n                                scales: {\r\n                                    x: {\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: \"Время\",\r\n                                        },\r\n                                    },\r\n                                    y: {\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: \"Событие\",\r\n                                        },\r\n                                        ticks: {\r\n                                            stepSize: 1,\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                        },\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}