{"ast":null,"code":"import { Element, StringElement, NumberElement, NullElement, BooleanElement, ArrayElement, ObjectElement, MemberElement, LinkElement, RefElement } from 'minim';\nimport { all } from 'ramda';\nimport { included } from 'ramda-adjunct';\nimport AnnotationElement from \"../elements/Annotation.mjs\";\nimport CommentElement from \"../elements/Comment.mjs\";\nimport ParserResultElement from \"../elements/ParseResult.mjs\";\nimport SourceMapElement from \"../elements/SourceMap.mjs\";\nimport createPredicate, { isElementType as isElementTypeHelper } from \"./helpers.mjs\";\n/**\n * @public\n */\nexport const isElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof Element || hasBasicElementProps(element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isStringElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof StringElement || hasBasicElementProps(element) && primitiveEq('string', element);\n});\n\n/**\n * @public\n */\nexport const isNumberElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof NumberElement || hasBasicElementProps(element) && primitiveEq('number', element);\n});\n\n/**\n * @public\n */\nexport const isNullElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof NullElement || hasBasicElementProps(element) && primitiveEq('null', element);\n});\n\n/**\n * @public\n */\nexport const isBooleanElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof BooleanElement || hasBasicElementProps(element) && primitiveEq('boolean', element);\n});\n\n/**\n * @public\n */\nexport const isObjectElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq,\n  hasMethod\n}) => {\n  return element => element instanceof ObjectElement || hasBasicElementProps(element) && primitiveEq('object', element) && hasMethod('keys', element) && hasMethod('values', element) && hasMethod('items', element);\n});\n\n/**\n * @public\n */\nexport const isArrayElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq,\n  hasMethod\n}) => {\n  return element => element instanceof ArrayElement && !(element instanceof ObjectElement) || hasBasicElementProps(element) && primitiveEq('array', element) && hasMethod('push', element) && hasMethod('unshift', element) && hasMethod('map', element) && hasMethod('reduce', element);\n});\n\n/**\n * @public\n */\nexport const isMemberElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof MemberElement || hasBasicElementProps(element) && isElementType('member', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isLinkElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof LinkElement || hasBasicElementProps(element) && isElementType('link', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isRefElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof RefElement || hasBasicElementProps(element) && isElementType('ref', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isAnnotationElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof AnnotationElement || hasBasicElementProps(element) && isElementType('annotation', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\nexport const isCommentElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof CommentElement || hasBasicElementProps(element) && isElementType('comment', element) && primitiveEq('string', element);\n});\n\n/**\n * @public\n */\nexport const isParseResultElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof ParserResultElement || hasBasicElementProps(element) && isElementType('parseResult', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\nexport const isSourceMapElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof SourceMapElement || hasBasicElementProps(element) && isElementType('sourceMap', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\n\n/**\n * @public\n */\nexport const isPrimitiveElement = element => {\n  return isElementTypeHelper('object', element) || isElementTypeHelper('array', element) || isElementTypeHelper('boolean', element) || isElementTypeHelper('number', element) || isElementTypeHelper('string', element) || isElementTypeHelper('null', element) || isElementTypeHelper('member', element);\n};\n\n/**\n * @public\n */\nexport const hasElementSourceMap = element => {\n  return isSourceMapElement(element.meta.get('sourceMap'));\n};\n\n/**\n * @public\n */\nexport const includesSymbols = (symbols, element) => {\n  if (symbols.length === 0) {\n    return true;\n  }\n  const elementSymbols = element.attributes.get('symbols');\n  if (!isArrayElement(elementSymbols)) {\n    return false;\n  }\n  return all(included(elementSymbols.toValue()), symbols);\n};\n\n/**\n * @public\n */\nexport const includesClasses = (classes, element) => {\n  if (classes.length === 0) {\n    return true;\n  }\n  return all(included(element.classes.toValue()), classes);\n};","map":{"version":3,"names":["Element","StringElement","NumberElement","NullElement","BooleanElement","ArrayElement","ObjectElement","MemberElement","LinkElement","RefElement","all","included","AnnotationElement","CommentElement","ParserResultElement","SourceMapElement","createPredicate","isElementType","isElementTypeHelper","isElement","hasBasicElementProps","primitiveEq","element","undefined","isStringElement","isNumberElement","isNullElement","isBooleanElement","isObjectElement","hasMethod","isArrayElement","isMemberElement","isLinkElement","isRefElement","isAnnotationElement","isCommentElement","isParseResultElement","isSourceMapElement","isPrimitiveElement","hasElementSourceMap","meta","get","includesSymbols","symbols","length","elementSymbols","attributes","toValue","includesClasses","classes"],"sources":["D:/Vasya/Documents/STUDYING/NSU/4_year/ТехДок/Проект/anakot/node_modules/@swagger-api/apidom-core/src/predicates/index.mjs"],"sourcesContent":["import { Element, StringElement, NumberElement, NullElement, BooleanElement, ArrayElement, ObjectElement, MemberElement, LinkElement, RefElement } from 'minim';\nimport { all } from 'ramda';\nimport { included } from 'ramda-adjunct';\nimport AnnotationElement from \"../elements/Annotation.mjs\";\nimport CommentElement from \"../elements/Comment.mjs\";\nimport ParserResultElement from \"../elements/ParseResult.mjs\";\nimport SourceMapElement from \"../elements/SourceMap.mjs\";\nimport createPredicate, { isElementType as isElementTypeHelper } from \"./helpers.mjs\";\n/**\n * @public\n */\nexport const isElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof Element || hasBasicElementProps(element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isStringElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof StringElement || hasBasicElementProps(element) && primitiveEq('string', element);\n});\n\n/**\n * @public\n */\nexport const isNumberElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof NumberElement || hasBasicElementProps(element) && primitiveEq('number', element);\n});\n\n/**\n * @public\n */\nexport const isNullElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof NullElement || hasBasicElementProps(element) && primitiveEq('null', element);\n});\n\n/**\n * @public\n */\nexport const isBooleanElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq\n}) => {\n  return element => element instanceof BooleanElement || hasBasicElementProps(element) && primitiveEq('boolean', element);\n});\n\n/**\n * @public\n */\nexport const isObjectElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq,\n  hasMethod\n}) => {\n  return element => element instanceof ObjectElement || hasBasicElementProps(element) && primitiveEq('object', element) && hasMethod('keys', element) && hasMethod('values', element) && hasMethod('items', element);\n});\n\n/**\n * @public\n */\nexport const isArrayElement = createPredicate(({\n  hasBasicElementProps,\n  primitiveEq,\n  hasMethod\n}) => {\n  return element => element instanceof ArrayElement && !(element instanceof ObjectElement) || hasBasicElementProps(element) && primitiveEq('array', element) && hasMethod('push', element) && hasMethod('unshift', element) && hasMethod('map', element) && hasMethod('reduce', element);\n});\n\n/**\n * @public\n */\nexport const isMemberElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof MemberElement || hasBasicElementProps(element) && isElementType('member', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isLinkElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof LinkElement || hasBasicElementProps(element) && isElementType('link', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isRefElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof RefElement || hasBasicElementProps(element) && isElementType('ref', element) && primitiveEq(undefined, element);\n});\n\n/**\n * @public\n */\nexport const isAnnotationElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof AnnotationElement || hasBasicElementProps(element) && isElementType('annotation', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\nexport const isCommentElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof CommentElement || hasBasicElementProps(element) && isElementType('comment', element) && primitiveEq('string', element);\n});\n\n/**\n * @public\n */\nexport const isParseResultElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof ParserResultElement || hasBasicElementProps(element) && isElementType('parseResult', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\nexport const isSourceMapElement = createPredicate(({\n  hasBasicElementProps,\n  isElementType,\n  primitiveEq\n}) => {\n  return element => element instanceof SourceMapElement || hasBasicElementProps(element) && isElementType('sourceMap', element) && primitiveEq('array', element);\n});\n\n/**\n * @public\n */\n\n/**\n * @public\n */\nexport const isPrimitiveElement = element => {\n  return isElementTypeHelper('object', element) || isElementTypeHelper('array', element) || isElementTypeHelper('boolean', element) || isElementTypeHelper('number', element) || isElementTypeHelper('string', element) || isElementTypeHelper('null', element) || isElementTypeHelper('member', element);\n};\n\n/**\n * @public\n */\nexport const hasElementSourceMap = element => {\n  return isSourceMapElement(element.meta.get('sourceMap'));\n};\n\n/**\n * @public\n */\nexport const includesSymbols = (symbols, element) => {\n  if (symbols.length === 0) {\n    return true;\n  }\n  const elementSymbols = element.attributes.get('symbols');\n  if (!isArrayElement(elementSymbols)) {\n    return false;\n  }\n  return all(included(elementSymbols.toValue()), symbols);\n};\n\n/**\n * @public\n */\nexport const includesClasses = (classes, element) => {\n  if (classes.length === 0) {\n    return true;\n  }\n  return all(included(element.classes.toValue()), classes);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}